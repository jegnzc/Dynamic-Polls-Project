@model DevelTest.Models.PollViewModel

@{
    ViewBag.Title = "Editar Encuesta";
}
@Html.HiddenFor(x => x.PollFields)
<h1>
    @ViewBag.Title
</h1>

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Edit", "Poll", FormMethod.Post, new { id = "pollCreateForm", @class = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="mb-3">
                @Html.LabelFor(x => x.Name, new { @class = "form-label" })
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="mb-3">
                @Html.LabelFor(x => x.Description, new { @class = "form-label" })
                @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <h3>Campos</h3>
            for (int i = 0; i < Model.PollFields.Count; i++)
            {
                <div class="row">
                    <div class="col-sm-3 mb-3">
                        @Html.LabelFor(x => x.PollFields[i].Name, new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.PollFields[i].Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PollFields[i].Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 mb-3">
                        @Html.LabelFor(x => x.PollFields[i].DisplayName, new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.PollFields[i].DisplayName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PollFields[i].DisplayName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 mb-3">
                        @Html.Label("Tipo de Campo", new { @class = "form-label" })
                        <fieldset>
                            @Html.DropDownListFor(x => x.PollFields[i].PollFieldTypeId, (SelectList)ViewBag.PollFieldTypes)
                        </fieldset>
                    </div>
                    <div class="col-sm-3 mt-4 form-check">
                        @Html.CheckBoxFor(x => x.PollFields[i].Required, new { @class = "form-check-input" })
                        @Html.LabelFor(x => x.PollFields[i].Required, new { @class = "form-check-label" })
                    </div>
                </div>
            }
           
            <button type="submit" class="btn btn-primary">Editar</button>
        }

    </div>
</div>