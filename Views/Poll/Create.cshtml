@model DevelTest.Models.PollViewModel

@{
    ViewBag.Title = "Nueva Encuesta";
}
@Html.HiddenFor(x => x.PollFields)
<h1>
    @ViewBag.Title
</h1>

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Create", "Poll", FormMethod.Post, new { id = "pollCreateForm", @class = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-12 col-sm-12">
                    @Html.LabelFor(x => x.Name, new { @class = "form-label" })
                </div>
                <div class="col-12 col-sm-6 mb-3">
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                <div class="col-12 col-sm-6 mb-3">
                    @Html.LabelFor(x => x.Description, new { @class = "form-label" })
                    @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row align-content-center">
                <div class="col-12 col-sm-2 mb-3">
                    @Html.LabelFor(x => x.PollField.Name, new { @class = "form-label" })
                    @Html.TextBoxFor(x => x.PollField.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PollField.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-3 mb-3">
                    @Html.LabelFor(x => x.PollField.DisplayName, new { @class = "form-label" })
                    @Html.TextBoxFor(x => x.PollField.DisplayName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PollField.DisplayName, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-2 mb-3">
                    @Html.Label("Tipo de Campo", new { @class = "form-label" })
                    @Html.DropDownListFor(x => x.PollField.PollFieldTypeId, (SelectList)ViewBag.PollFieldTypes, new { @class = "form-control" })
                </div>
                <div class="col-sm-2 d-flex">
                    <div class="row d-flex justify-content-center text-center">
                        @Html.LabelFor(x => x.PollField.Required, new { @class = "col-sm-12 form-check-label" })
                        @Html.CheckBoxFor(x => x.PollField.Required, new { @class = "form-check form-check-input" })
                    </div>
                </div>
                <div class="col-sm-2 d-flex mt-2">
                    <input type="submit" class="btn btn-secondary align-self-center" value="Agregar" formaction="@Url.Action("AddPollField")" formmethod="post"/>
                </div>
            </div>
            if (Model != null && Model.PollFields != null)
            {
                <div class="mt-2">
                    <table class="table">

                        @for (int i = 0; i < Model.PollFields.Count; i++)
                        {

                            @Html.HiddenFor(x => x.PollFields[i].Name)
                            @Html.HiddenFor(x => x.PollFields[i].DisplayName)
                            @Html.HiddenFor(x => x.PollFields[i].PollFieldTypeId)
                            @Html.HiddenFor(x => x.PollFields[i].Required)
                            <tbody>
                                <tr>
                                    <td>
                                        @Html.DisplayFor(x => x.PollFields[i].Name, new { @class = "form-control" })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(x => x.PollFields[i].DisplayName, new { @class = "form-control" })
                                    </td>
                                    <td>
                                        Requerido: @Html.DisplayFor(x => x.PollFields[i].Required, new { @class = "form-check form-check-input" })
                                    </td>
                                </tr>
                            </tbody>
                        }
                    </table>
                </div>
            }


            <button type="submit" class="btn btn-primary">Crear</button>
        }

    </div>
</div>
